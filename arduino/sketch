#include "Keyboard.h"

void setup() {
  Serial1.begin(9600);  // Inicia a comunicação serial com o Raspberry Pi
  Keyboard.begin();    // Inicia o modo teclado HID
}

void typeCharacter(char c) {
  switch (c) {
    case '/': Keyboard.press(KEY_RIGHT_ALT); Keyboard.press('q'); break; // '/' no teclado PT-BR
    case ';': Keyboard.press(KEY_RIGHT_ALT); Keyboard.press(','); break; // ';' no teclado PT-BR
    case ':': Keyboard.press(KEY_RIGHT_ALT); Keyboard.press('.'); break; // ':' no teclado PT-BR
    case '?': Keyboard.press(KEY_RIGHT_ALT); Keyboard.press('w'); break; // '?' no teclado PT-BR
    default:  Keyboard.press(c); break;  // Outros caracteres normais
  }
  delay(10);  // Pequeno delay para evitar erros
  Keyboard.releaseAll();
}

void loop() {
  if (Serial1.available() > 0) {
    String command = Serial1.readStringUntil('\n');  // Lê o comando do Raspberry Pi
    command.trim();  // Remove espaços extras

    // Se o comando começar com "STRING ", digita o texto após "STRING "
    if (command.startsWith("STRING ")) {
      String text = command.substring(7);
      for (int i = 0; i < text.length(); i++) {
        typeCharacter(text[i]);  // Digita caractere por caractere
      }
      //Keyboard.println("");  // Pressiona Enter no final (opcional)
    }
    // Se o comando for "ENTER", pressiona a tecla Enter
    else if (command == "ENTER") {
      Keyboard.press(KEY_RETURN);
      Keyboard.releaseAll();
    }
    // Se o comando for "GUI r", simula "Windows + R"
    else if (command == "GUI r") {
      Keyboard.press(KEY_LEFT_GUI);  // Pressiona a tecla Windows
      Keyboard.press('r');           // Pressiona a tecla 'r'
      Keyboard.releaseAll();
    }
    // Se o comando for "CTRL ALT DEL", simula "Ctrl + Alt + Del"
    else if (command == "CTRL ALT DEL") {
      Keyboard.press(KEY_LEFT_CTRL);  // Pressiona Ctrl
      Keyboard.press(KEY_LEFT_ALT);   // Pressiona Alt
      Keyboard.press(KEY_DELETE);     // Pressiona Delete
      Keyboard.releaseAll();
    }
    else if (command == "CTRL SHIFT ENTER") {  // Novo comando adicionado
      Keyboard.press(KEY_LEFT_CTRL);
      Keyboard.press(KEY_LEFT_SHIFT);
      Keyboard.press(KEY_RETURN);
      delay(100);
      Keyboard.releaseAll();
    }
    else if (command == "LEFT") {
      delay(1000);
      Keyboard.press(KEY_LEFT_ARROW);
      //Keyboard.press(KEY_LEFT_ARROW);
      delay(100);  // Pequeno delay para garantir que a tecla seja registrada
      Keyboard.releaseAll();
    }
    else if (command == "ALT F4") {
      Keyboard.press(KEY_LEFT_ALT);  // Pressiona ALT
      Keyboard.press(KEY_F4);        // Pressiona F4
      delay(100);                    // Pequeno delay para garantir o registro da tecla
      Keyboard.releaseAll();
    }

    // Se o comando for "DELAY", aguarda pelo tempo especificado
    else if (command.startsWith("DELAY ")) {
      int delayTime = command.substring(6).toInt();  // Converte o número após "DELAY " para inteiro
      delay(delayTime);  // Aguarda o tempo especificado
    }
  }
}
